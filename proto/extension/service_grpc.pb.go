// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: proto/extension/service.proto

package extension

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EnvoyGatewayExtensionClient is the client API for EnvoyGatewayExtension service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EnvoyGatewayExtensionClient interface {
	PostHTTPListenerTranslation(ctx context.Context, in *PostHTTPListenerTranslationRequest, opts ...grpc.CallOption) (*PostHTTPListenerTranslationResponse, error)
}

type envoyGatewayExtensionClient struct {
	cc grpc.ClientConnInterface
}

func NewEnvoyGatewayExtensionClient(cc grpc.ClientConnInterface) EnvoyGatewayExtensionClient {
	return &envoyGatewayExtensionClient{cc}
}

func (c *envoyGatewayExtensionClient) PostHTTPListenerTranslation(ctx context.Context, in *PostHTTPListenerTranslationRequest, opts ...grpc.CallOption) (*PostHTTPListenerTranslationResponse, error) {
	out := new(PostHTTPListenerTranslationResponse)
	err := c.cc.Invoke(ctx, "/envoygateway.extension.EnvoyGatewayExtension/PostHTTPListenerTranslation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvoyGatewayExtensionServer is the server API for EnvoyGatewayExtension service.
// All implementations must embed UnimplementedEnvoyGatewayExtensionServer
// for forward compatibility
type EnvoyGatewayExtensionServer interface {
	PostHTTPListenerTranslation(context.Context, *PostHTTPListenerTranslationRequest) (*PostHTTPListenerTranslationResponse, error)
	mustEmbedUnimplementedEnvoyGatewayExtensionServer()
}

// UnimplementedEnvoyGatewayExtensionServer must be embedded to have forward compatible implementations.
type UnimplementedEnvoyGatewayExtensionServer struct {
}

func (UnimplementedEnvoyGatewayExtensionServer) PostHTTPListenerTranslation(context.Context, *PostHTTPListenerTranslationRequest) (*PostHTTPListenerTranslationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostHTTPListenerTranslation not implemented")
}
func (UnimplementedEnvoyGatewayExtensionServer) mustEmbedUnimplementedEnvoyGatewayExtensionServer() {}

// UnsafeEnvoyGatewayExtensionServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EnvoyGatewayExtensionServer will
// result in compilation errors.
type UnsafeEnvoyGatewayExtensionServer interface {
	mustEmbedUnimplementedEnvoyGatewayExtensionServer()
}

func RegisterEnvoyGatewayExtensionServer(s grpc.ServiceRegistrar, srv EnvoyGatewayExtensionServer) {
	s.RegisterService(&EnvoyGatewayExtension_ServiceDesc, srv)
}

func _EnvoyGatewayExtension_PostHTTPListenerTranslation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostHTTPListenerTranslationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvoyGatewayExtensionServer).PostHTTPListenerTranslation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envoygateway.extension.EnvoyGatewayExtension/PostHTTPListenerTranslation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvoyGatewayExtensionServer).PostHTTPListenerTranslation(ctx, req.(*PostHTTPListenerTranslationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EnvoyGatewayExtension_ServiceDesc is the grpc.ServiceDesc for EnvoyGatewayExtension service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EnvoyGatewayExtension_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "envoygateway.extension.EnvoyGatewayExtension",
	HandlerType: (*EnvoyGatewayExtensionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostHTTPListenerTranslation",
			Handler:    _EnvoyGatewayExtension_PostHTTPListenerTranslation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/extension/service.proto",
}
